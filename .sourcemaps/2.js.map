{"version":3,"sources":["../../src/pages/wallet-transfer/wallet-transfer.module.ts","../../node_modules/@ionic-native/barcode-scanner/index.js","../../src/pages/wallet-transfer/wallet-transfer.ts"],"names":[],"mappings":"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","file":"2.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { WalletTransferPage } from './wallet-transfer';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\n\n@NgModule({\n  declarations: [\n    WalletTransferPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(WalletTransferPage),\n  ],\n  providers: [BarcodeScanner]\n})\nexport class WalletTransferPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/wallet-transfer/wallet-transfer.module.ts","var __extends = (this && this.__extends) || (function () {\n    var extendStatics = Object.setPrototypeOf ||\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\n    return function (d, b) {\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nvar __metadata = (this && this.__metadata) || function (k, v) {\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\n};\nimport { Injectable } from '@angular/core';\nimport { Cordova, IonicNativePlugin, Plugin } from '@ionic-native/core';\n/**\n * @name Barcode Scanner\n * @description\n * The Barcode Scanner Plugin opens a camera view and automatically scans a barcode, returning the data back to you.\n *\n * Requires Cordova plugin: `phonegap-plugin-barcodescanner`. For more info, please see the [BarcodeScanner plugin docs](https://github.com/phonegap/phonegap-plugin-barcodescanner).\n *\n * @usage\n * ```typescript\n * import { BarcodeScanner } from '@ionic-native/barcode-scanner';\n *\n * constructor(private barcodeScanner: BarcodeScanner) { }\n *\n * ...\n *\n *\n * this.barcodeScanner.scan().then(barcodeData => {\n *  console.log('Barcode data', barcodeData);\n * }).catch(err => {\n * \tconsole.log('Error', err);\n * });\n * ```\n * @interfaces\n * BarcodeScannerOptions\n * BarcodeScanResult\n */\nvar BarcodeScanner = (function (_super) {\n    __extends(BarcodeScanner, _super);\n    function BarcodeScanner() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.Encode = {\n            TEXT_TYPE: 'TEXT_TYPE',\n            EMAIL_TYPE: 'EMAIL_TYPE',\n            PHONE_TYPE: 'PHONE_TYPE',\n            SMS_TYPE: 'SMS_TYPE'\n        };\n        return _this;\n    }\n    /**\n     * Open the barcode scanner.\n     * @param {BarcodeScannerOptions} [options] Optional options to pass to the scanner\n     * @returns {Promise<any>} Returns a Promise that resolves with scanner data, or rejects with an error.\n     */\n    /**\n       * Open the barcode scanner.\n       * @param {BarcodeScannerOptions} [options] Optional options to pass to the scanner\n       * @returns {Promise<any>} Returns a Promise that resolves with scanner data, or rejects with an error.\n       */\n    BarcodeScanner.prototype.scan = /**\n       * Open the barcode scanner.\n       * @param {BarcodeScannerOptions} [options] Optional options to pass to the scanner\n       * @returns {Promise<any>} Returns a Promise that resolves with scanner data, or rejects with an error.\n       */\n    function (options) {\n        return;\n    };\n    /**\n     * Encodes data into a barcode.\n     * NOTE: not well supported on Android\n     * @param {string} type Type of encoding\n     * @param {any} data Data to encode\n     * @returns {Promise<any>}\n     */\n    /**\n       * Encodes data into a barcode.\n       * NOTE: not well supported on Android\n       * @param {string} type Type of encoding\n       * @param {any} data Data to encode\n       * @returns {Promise<any>}\n       */\n    BarcodeScanner.prototype.encode = /**\n       * Encodes data into a barcode.\n       * NOTE: not well supported on Android\n       * @param {string} type Type of encoding\n       * @param {any} data Data to encode\n       * @returns {Promise<any>}\n       */\n    function (type, data) {\n        return;\n    };\n    BarcodeScanner.decorators = [\n        { type: Injectable },\n    ];\n    __decorate([\n        Cordova({\n            callbackOrder: 'reverse'\n        }),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], BarcodeScanner.prototype, \"scan\", null);\n    __decorate([\n        Cordova(),\n        __metadata(\"design:type\", Function),\n        __metadata(\"design:paramtypes\", [String, Object]),\n        __metadata(\"design:returntype\", Promise)\n    ], BarcodeScanner.prototype, \"encode\", null);\n    /**\n     * @name Barcode Scanner\n     * @description\n     * The Barcode Scanner Plugin opens a camera view and automatically scans a barcode, returning the data back to you.\n     *\n     * Requires Cordova plugin: `phonegap-plugin-barcodescanner`. For more info, please see the [BarcodeScanner plugin docs](https://github.com/phonegap/phonegap-plugin-barcodescanner).\n     *\n     * @usage\n     * ```typescript\n     * import { BarcodeScanner } from '@ionic-native/barcode-scanner';\n     *\n     * constructor(private barcodeScanner: BarcodeScanner) { }\n     *\n     * ...\n     *\n     *\n     * this.barcodeScanner.scan().then(barcodeData => {\n     *  console.log('Barcode data', barcodeData);\n     * }).catch(err => {\n     * \tconsole.log('Error', err);\n     * });\n     * ```\n     * @interfaces\n     * BarcodeScannerOptions\n     * BarcodeScanResult\n     */\n    BarcodeScanner = __decorate([\n        Plugin({\n            pluginName: 'BarcodeScanner',\n            plugin: 'phonegap-plugin-barcodescanner',\n            pluginRef: 'cordova.plugins.barcodeScanner',\n            repo: 'https://github.com/phonegap/phonegap-plugin-barcodescanner',\n            platforms: ['Android', 'BlackBerry 10', 'Browser', 'iOS', 'Windows']\n        })\n    ], BarcodeScanner);\n    return BarcodeScanner;\n}(IonicNativePlugin));\nexport { BarcodeScanner };\n//# sourceMappingURL=index.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/@ionic-native/barcode-scanner/index.js\n// module id = 922\n// module chunks = 2 3","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams, AlertController } from 'ionic-angular';\n\nimport { EthereumProvider } from '../../providers/ethereum/ethereum';\nimport { ShareServiceProvider } from '../../providers/share-service/share-service';\nimport { BarcodeScanner } from '@ionic-native/barcode-scanner';\nimport { WalletServiceProvider } from '../../providers/wallet-service/wallet-service';\n// import { QRScanner, QRScannerStatus } from 'cordova-plugin-qrscanner';\n\n/**\n * Generated class for the WalletTransferPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-wallet-transfer',\n  templateUrl: 'wallet-transfer.html',\n})\nexport class WalletTransferPage {\n\n  account: any;\n  toAddress: string;\n  amount: number;\n  password: string;\n  fromAddress: string;\n\n  constructor(\n    public navCtrl: NavController,\n    public alertCtrl: AlertController,\n    public navParams: NavParams,\n    private barcodeScanner: BarcodeScanner,\n    public ethereumProvider: EthereumProvider,\n    public shareServiceProvider: ShareServiceProvider,\n    public walletServiceProvider: WalletServiceProvider\n  ) {\n    this.account = this.navParams.data;\n    this.fromAddress = this.account.address;\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad WalletTransferPage');\n  }\n\n  scan() {\n    this.barcodeScanner.scan().then(barcodeData => {\n      console.log('Barcode data', barcodeData.text);\n      this.shareServiceProvider.showToast(barcodeData.text);\n      this.toAddress = barcodeData.text;\n    }).catch(err => {\n      console.log('Error', err);\n    });\n  }\n\n  transfer() {\n    this.shareServiceProvider.showToast(\"Transfer, please wait\");\n\n    if (this.amount == null) {\n      this.shareServiceProvider.showAlert(\"Please enter the amount\");\n      return;\n    }\n    if (this.amount <= 0) {\n      this.shareServiceProvider.showAlert(\"Amount shoud be greater than 0\");\n      return;\n    }\n    if (this.password == null) {\n      this.shareServiceProvider.showAlert(\"Please enter the password\");\n      return;\n    }\n    if (this.toAddress == null) {\n      this.shareServiceProvider.showAlert(\"Please enter the receiver address\");\n      return;\n    }\n\n    try {\n      this.shareServiceProvider.showLoadingWithCustomContent(\"Please wait, it may take a long time...\");\n      this.ethereumProvider.checkBalance(this.fromAddress).then(weBal => {\n        if (parseFloat(weBal) >= this.amount) {\n          this.ethereumProvider.checkEthBalance(this.fromAddress).then(ethBal => {\n            if (parseFloat(ethBal) >= 0.00005) {\n              \n              this.ethereumProvider.decrypt(this.account.keystone, this.password).then(acc => {\n                console.log(\"decrypt acc\", acc);\n                \n                if (this.fromAddress == acc.address) {\n                  this.ethereumProvider.transferWeCoin(acc, this.toAddress, this.amount).then(receipt => {\n                    console.log(receipt);\n                    this.shareServiceProvider.hideLoading();\n                    this.confirmTransferSuccess(\"The block hash: \" + receipt.blockHash);\n                  })\n                } else {\n                  this.shareServiceProvider.hideLoading();\n                  this.shareServiceProvider.showAlert(\"Wrong password, transfer failed\");\n                }\n              })\n            } else {\n              this.shareServiceProvider.hideLoading();\n              this.shareServiceProvider.showAlert(\"You don't have enough Ether to pay the gas fee\");\n              return;\n            }\n          })\n        } else {\n          this.shareServiceProvider.hideLoading();\n          this.shareServiceProvider.showAlert(\"You don't have enough WeCoin\");\n          return;\n        }\n      })\n    } catch (error) {\n      this.shareServiceProvider.showAlert(error);\n      this.shareServiceProvider.hideLoading();\n    }\n  }\n\n  confirmTransferSuccess(msg){\n    const confirm = this.alertCtrl.create({\n      title: \"Success\",\n      message: \"Token Transfer Succsessfully! \" + msg,\n      buttons: [\n        {\n          text: 'OK',\n          handler: () => {\n            console.log('OK clicked');\n            this.navCtrl.pop();\n          }\n        }\n      ]\n    });\n    confirm.present();\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/wallet-transfer/wallet-transfer.ts"],"sourceRoot":""}