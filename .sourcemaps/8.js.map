{"version":3,"sources":["../../src/pages/register-select-groups/register-select-groups.module.ts","../../src/pages/register-select-groups/register-select-groups.ts"],"names":[],"mappings":"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","file":"8.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { RegisterSelectGroupsPage } from './register-select-groups';\n\n@NgModule({\n  declarations: [\n    RegisterSelectGroupsPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(RegisterSelectGroupsPage),\n  ],\n})\nexport class RegisterSelectGroupsPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register-select-groups/register-select-groups.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { GroupServiceProvider } from '../../providers/group-service/group-service';\nimport { ShareServiceProvider } from '../../providers/share-service/share-service';\nimport { AuthServiceProvider } from '../../providers/auth-service/auth-service';\nimport { UserServiceProvider } from '../../providers/user-service/user-service';\nimport { TabsPage } from '../tabs/tabs';\n/**\n * Generated class for the RegisterSelectGroupsPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-register-select-groups',\n  templateUrl: 'register-select-groups.html',\n})\nexport class RegisterSelectGroupsPage {\n\n  \n  groups = [];\n  count: number = 0;\n  isValid: boolean = false;\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    public groupServiceProvider: GroupServiceProvider,\n    public shareServiceProvider: ShareServiceProvider,\n    public authServiceProvider: AuthServiceProvider,\n    public userServiceProvider: UserServiceProvider,\n    ) {\n    console.log(this.navParams);\n    var data = this.navParams.data;\n    if(data != null && !this.authServiceProvider.isLoggedIn()){\n      try {\n        this.groups = [];\n        data.forEach(element => {\n          if(element.selected){\n            console.log(\"selected cate: \" + element.name);\n            let groupNames = element.groups;\n            if(groupNames!=undefined){\n              groupNames.forEach(group => {\n                groupServiceProvider.getGroup(element.name, group).then((g)=>{\n                  this.groups.push(g);\n                  console.log(g );\n                });\n              });\n            }\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    } else {\n      try {\n        this.groups = [];\n        data.forEach(element => {\n          if(element.selected){\n            console.log(\"selected cate: \" + element.name);\n            let groupNames = element.groups;\n            if(groupNames!=undefined){\n              groupNames.forEach(group => {\n                groupServiceProvider.getGroup(element.name, group).then((g)=>{\n                  if(g!=null)\n                    this.groups.push(g);\n                });\n              });\n            }\n          }\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    }\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad RegisterSelectGroupsPage');\n  }\n\n  joinGroup(group){\n    if(group.joined){\n      this.count--;\n    }else{\n      this.count++;\n    }\n    group.joined = !group.joined;\n    if(this.count > 0){\n      this.isValid = true;\n    }else{\n      this.isValid = false;\n    }\n  }\n\n  nextPage(){\n    var joinedGroup = [];\n    if(this.authServiceProvider.isLoggedIn()){\n      this.shareServiceProvider.showLoading();\n      var groupProcessed = 0;\n      this.groups.forEach(element => {\n        \n        if (element.joined) {\n          \n          joinedGroup.push(element.id);\n          \n          \n        }\n        console.log(joinedGroup);\n        groupProcessed++;\n\n        if(groupProcessed==this.groups.length){\n          //console.log(joinedGroup);\n          var uid = this.authServiceProvider.getLoggedUID();\n          this.groupServiceProvider.addMemberToGroup(uid, joinedGroup).then(()=>{\n            this.userServiceProvider.addGroupToUser(uid, joinedGroup, this.authServiceProvider).then(()=>{\n              this.shareServiceProvider.hideLoading();\n              this.shareServiceProvider.showToast(\"Join group successfully\");\n              this.navCtrl.setRoot(TabsPage);\n              this.navCtrl.popToRoot();\n            })\n          }); \n        }\n      });\n    }else {\n      this.navCtrl.push('RegisterPage', this.groups);\n    }\n    \n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/register-select-groups/register-select-groups.ts"],"sourceRoot":""}