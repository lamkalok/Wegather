{"version":3,"sources":["../../src/pages/wallet-privatekey/wallet-privatekey.module.ts","../../node_modules/ngx-clipboard/dist/src/clipboard.service.js","../../node_modules/ngx-clipboard/dist/ngx-clipboard.js","../../node_modules/ngx-clipboard/dist/src/clipboard.directive.js","../../node_modules/ngx-window-token/dist/ngx-window-token.js","../../node_modules/ngx-clipboard/dist/src/ngx-clipboard.js","../../node_modules/ngx-window-token/dist/src/ngx-window-token.js","../../src/pages/wallet-privatekey/wallet-privatekey.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;AAAyC;AACO;AACW;AACX;AAUhD;IAAA;IAAyC,CAAC;IAA7B,0BAA0B;QATtC,uEAAQ,CAAC;YACR,YAAY,EAAE;gBACZ,gFAAoB;aACrB;YACD,OAAO,EAAE;gBACP,sEAAe,CAAC,QAAQ,CAAC,gFAAoB,CAAC;gBAC9C,sEAAe;aAChB;SACF,CAAC;OACW,0BAA0B,CAAG;IAAD,iCAAC;CAAA;AAAH;;;;;;;;;ACbvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA,cAAc,WAAW;AACzB;AACuE;AAClB;AACX;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,2BAA2B,EAAE;AAC7B;AACA;AACA;AACA,0BAA0B,EAAE;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB;AACA;AACA,gBAAgB;AAChB;AACA;AACA;AACA;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,gBAAgB;AAChB;AACA;AACA,eAAe,EAAE;AACjB,eAAe,EAAE;AACjB,g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","file":"0.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { WalletPrivatekeyPage } from './wallet-privatekey';\nimport { ClipboardModule } from 'ngx-clipboard';\n@NgModule({\n  declarations: [\n    WalletPrivatekeyPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(WalletPrivatekeyPage),\n    ClipboardModule,\n  ],\n})\nexport class WalletPrivatekeyPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/wallet-privatekey/wallet-privatekey.module.ts","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Inject, Injectable, Optional, SkipSelf } from \"@angular/core\";\nimport { DOCUMENT } from \"@angular/platform-browser\";\nimport { WINDOW } from \"ngx-window-token\";\nvar ClipboardService = (function () {\n    function ClipboardService(document, window) {\n        this.document = document;\n        this.window = window;\n    }\n    Object.defineProperty(ClipboardService.prototype, \"isSupported\", {\n        get: /**\n         * @return {?}\n         */\n        function () {\n            return !!this.document.queryCommandSupported && !!this.document.queryCommandSupported('copy');\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * @param {?} element\n     * @return {?}\n     */\n    ClipboardService.prototype.isTargetValid = /**\n     * @param {?} element\n     * @return {?}\n     */\n    function (element) {\n        if (element instanceof HTMLInputElement || element instanceof HTMLTextAreaElement) {\n            if (element.hasAttribute('disabled')) {\n                // tslint:disable-next-line:max-line-length\n                throw new Error('Invalid \"target\" attribute. Please use \"readonly\" instead of \"disabled\" attribute');\n            }\n            return true;\n        }\n        throw new Error('Target should be input or textarea');\n    };\n    /**\n     * copyFromInputElement\n     * @param {?} targetElm\n     * @return {?}\n     */\n    ClipboardService.prototype.copyFromInputElement = /**\n     * copyFromInputElement\n     * @param {?} targetElm\n     * @return {?}\n     */\n    function (targetElm) {\n        try {\n            this.selectTarget(targetElm);\n            var /** @type {?} */ re = this.copyText();\n            this.clearSelection(targetElm, this.window);\n            return re;\n        }\n        catch (/** @type {?} */ error) {\n            return false;\n        }\n    };\n    /**\n     * Creates a fake textarea element, sets its value from `text` property,\n     * and makes a selection on it.\n     * @param {?} content\n     * @return {?}\n     */\n    ClipboardService.prototype.copyFromContent = /**\n     * Creates a fake textarea element, sets its value from `text` property,\n     * and makes a selection on it.\n     * @param {?} content\n     * @return {?}\n     */\n    function (content) {\n        if (!this.tempTextArea) {\n            this.tempTextArea = this.createTempTextArea(this.document, this.window);\n            this.document.body.appendChild(this.tempTextArea);\n        }\n        this.tempTextArea.value = content;\n        return this.copyFromInputElement(this.tempTextArea);\n    };\n    /**\n     * @return {?}\n     */\n    ClipboardService.prototype.destroy = /**\n     * @return {?}\n     */\n    function () {\n        if (this.tempTextArea) {\n            this.document.body.removeChild(this.tempTextArea);\n            this.tempTextArea = undefined;\n        }\n    };\n    /**\n     * @param {?} inputElement\n     * @return {?}\n     */\n    ClipboardService.prototype.selectTarget = /**\n     * @param {?} inputElement\n     * @return {?}\n     */\n    function (inputElement) {\n        inputElement.select();\n        inputElement.setSelectionRange(0, inputElement.value.length);\n        return inputElement.value.length;\n    };\n    /**\n     * @return {?}\n     */\n    ClipboardService.prototype.copyText = /**\n     * @return {?}\n     */\n    function () {\n        return this.document.execCommand('copy');\n    };\n    /**\n     * @param {?} inputElement\n     * @param {?} window\n     * @return {?}\n     */\n    ClipboardService.prototype.clearSelection = /**\n     * @param {?} inputElement\n     * @param {?} window\n     * @return {?}\n     */\n    function (inputElement, window) {\n        // tslint:disable-next-line:no-unused-expression\n        inputElement && inputElement.blur();\n        window.getSelection().removeAllRanges();\n    };\n    /**\n     * @param {?} doc\n     * @param {?} window\n     * @return {?}\n     */\n    ClipboardService.prototype.createTempTextArea = /**\n     * @param {?} doc\n     * @param {?} window\n     * @return {?}\n     */\n    function (doc, window) {\n        var /** @type {?} */ isRTL = doc.documentElement.getAttribute('dir') === 'rtl';\n        var /** @type {?} */ ta;\n        ta = doc.createElement('textarea');\n        // Prevent zooming on iOS\n        ta.style.fontSize = '12pt';\n        // Reset box model\n        ta.style.border = '0';\n        ta.style.padding = '0';\n        ta.style.margin = '0';\n        // Move element out of screen horizontally\n        ta.style.position = 'absolute';\n        ta.style[isRTL ? 'right' : 'left'] = '-9999px';\n        // Move element to the same position vertically\n        var /** @type {?} */ yPosition = window.pageYOffset || doc.documentElement.scrollTop;\n        ta.style.top = yPosition + 'px';\n        ta.setAttribute('readonly', '');\n        return ta;\n    };\n    ClipboardService.decorators = [\n        { type: Injectable },\n    ];\n    /** @nocollapse */\n    ClipboardService.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: Inject, args: [DOCUMENT,] },] },\n        { type: undefined, decorators: [{ type: Inject, args: [WINDOW,] },] },\n    ]; };\n    return ClipboardService;\n}());\nexport { ClipboardService };\nfunction ClipboardService_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ClipboardService.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ClipboardService.ctorParameters;\n    /** @type {?} */\n    ClipboardService.prototype.tempTextArea;\n    /** @type {?} */\n    ClipboardService.prototype.document;\n    /** @type {?} */\n    ClipboardService.prototype.window;\n}\n/**\n * @param {?} doc\n * @param {?} win\n * @param {?} parentDispatcher\n * @return {?}\n */\nexport function CLIPBOARD_SERVICE_PROVIDER_FACTORY(doc, win, parentDispatcher) {\n    return parentDispatcher || new ClipboardService(doc, win);\n}\nexport var /** @type {?} */ CLIPBOARD_SERVICE_PROVIDER = {\n    deps: [/** @type {?} */ (DOCUMENT), /** @type {?} */ (WINDOW), [new Optional(), new SkipSelf(), ClipboardService]\n    ],\n    provide: ClipboardService,\n    useFactory: CLIPBOARD_SERVICE_PROVIDER_FACTORY\n};\n//# sourceMappingURL=clipboard.service.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ngx-clipboard/dist/src/clipboard.service.js\n// module id = 898\n// module chunks = 0 1","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nexport { ClipboardModule, ClipboardDirective, ClipboardService } from \"./src/ngx-clipboard\";\n//# sourceMappingURL=ngx-clipboard.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ngx-clipboard/dist/ngx-clipboard.js\n// module id = 900\n// module chunks = 0 1","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { Directive, EventEmitter, HostListener, Input, Output } from \"@angular/core\";\nimport { ClipboardService } from \"./clipboard.service\";\nvar ClipboardDirective = (function () {\n    function ClipboardDirective(clipboardSrv) {\n        this.clipboardSrv = clipboardSrv;\n        this.cbOnSuccess = new EventEmitter();\n        this.cbOnError = new EventEmitter();\n    }\n    /**\n     * @return {?}\n     */\n    ClipboardDirective.prototype.ngOnInit = /**\n     * @return {?}\n     */\n    function () { };\n    /**\n     * @return {?}\n     */\n    ClipboardDirective.prototype.ngOnDestroy = /**\n     * @return {?}\n     */\n    function () {\n        this.clipboardSrv.destroy();\n    };\n    /**\n     * @param {?} event\n     * @return {?}\n     */\n    ClipboardDirective.prototype.onClick = /**\n     * @param {?} event\n     * @return {?}\n     */\n    function (event) {\n        if (!this.clipboardSrv.isSupported) {\n            this.handleResult(false, undefined);\n        }\n        else if (this.targetElm && this.clipboardSrv.isTargetValid(this.targetElm)) {\n            this.handleResult(this.clipboardSrv.copyFromInputElement(this.targetElm), this.targetElm.value);\n        }\n        else if (this.cbContent) {\n            this.handleResult(this.clipboardSrv.copyFromContent(this.cbContent), this.cbContent);\n        }\n    };\n    /**\n     * Fires an event based on the copy operation result.\n     * @param {?} succeeded\n     * @param {?} copiedContent\n     * @return {?}\n     */\n    ClipboardDirective.prototype.handleResult = /**\n     * Fires an event based on the copy operation result.\n     * @param {?} succeeded\n     * @param {?} copiedContent\n     * @return {?}\n     */\n    function (succeeded, copiedContent) {\n        if (succeeded) {\n            this.cbOnSuccess.emit({ isSuccess: true, content: copiedContent });\n        }\n        else {\n            this.cbOnError.emit({ isSuccess: false });\n        }\n    };\n    ClipboardDirective.decorators = [\n        { type: Directive, args: [{\n                    // tslint:disable-next-line:directive-selector\n                    selector: '[ngxClipboard]'\n                },] },\n    ];\n    /** @nocollapse */\n    ClipboardDirective.ctorParameters = function () { return [\n        { type: ClipboardService, },\n    ]; };\n    ClipboardDirective.propDecorators = {\n        \"targetElm\": [{ type: Input, args: ['ngxClipboard',] },],\n        \"cbContent\": [{ type: Input },],\n        \"cbOnSuccess\": [{ type: Output },],\n        \"cbOnError\": [{ type: Output },],\n        \"onClick\": [{ type: HostListener, args: ['click', ['$event.target'],] },],\n    };\n    return ClipboardDirective;\n}());\nexport { ClipboardDirective };\nfunction ClipboardDirective_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ClipboardDirective.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ClipboardDirective.ctorParameters;\n    /** @type {!Object<string,!Array<{type: !Function, args: (undefined|!Array<?>)}>>} */\n    ClipboardDirective.propDecorators;\n    /** @type {?} */\n    ClipboardDirective.prototype.targetElm;\n    /** @type {?} */\n    ClipboardDirective.prototype.cbContent;\n    /** @type {?} */\n    ClipboardDirective.prototype.cbOnSuccess;\n    /** @type {?} */\n    ClipboardDirective.prototype.cbOnError;\n    /** @type {?} */\n    ClipboardDirective.prototype.clipboardSrv;\n}\n//# sourceMappingURL=clipboard.directive.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ngx-clipboard/dist/src/clipboard.directive.js\n// module id = 901\n// module chunks = 0 1","export { WindowTokenModule, WINDOW } from './src/ngx-window-token';\n//# sourceMappingURL=ngx-window-token.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ngx-window-token/dist/ngx-window-token.js\n// module id = 902\n// module chunks = 0 1","/**\n * @fileoverview added by tsickle\n * @suppress {checkTypes} checked by tsc\n */\nimport { ClipboardDirective } from \"./clipboard.directive\";\nimport { CLIPBOARD_SERVICE_PROVIDER } from \"./clipboard.service\";\nimport { CommonModule } from \"@angular/common\";\nimport { NgModule } from \"@angular/core\";\nimport { WindowTokenModule } from \"ngx-window-token\";\nexport { ClipboardDirective } from \"./clipboard.directive\";\nexport { ClipboardService, CLIPBOARD_SERVICE_PROVIDER_FACTORY, CLIPBOARD_SERVICE_PROVIDER } from \"./clipboard.service\";\nvar ClipboardModule = (function () {\n    function ClipboardModule() {\n    }\n    ClipboardModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [CommonModule, WindowTokenModule],\n                    // tslint:disable-next-line:object-literal-sort-keys\n                    declarations: [ClipboardDirective],\n                    exports: [ClipboardDirective],\n                    providers: [CLIPBOARD_SERVICE_PROVIDER]\n                },] },\n    ];\n    /** @nocollapse */\n    ClipboardModule.ctorParameters = function () { return []; };\n    return ClipboardModule;\n}());\nexport { ClipboardModule };\nfunction ClipboardModule_tsickle_Closure_declarations() {\n    /** @type {!Array<{type: !Function, args: (undefined|!Array<?>)}>} */\n    ClipboardModule.decorators;\n    /**\n     * @nocollapse\n     * @type {function(): !Array<(null|{type: ?, decorators: (undefined|!Array<{type: !Function, args: (undefined|!Array<?>)}>)})>}\n     */\n    ClipboardModule.ctorParameters;\n}\n//# sourceMappingURL=ngx-clipboard.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ngx-clipboard/dist/src/ngx-clipboard.js\n// module id = 903\n// module chunks = 0 1","import { NgModule } from '@angular/core';\nimport { InjectionToken } from '@angular/core';\nexport var /** @type {?} */ WINDOW = new InjectionToken('WindowToken');\n/**\n * @return {?}\n */\nexport function _window() {\n    return window;\n}\nvar WindowTokenModule = (function () {\n    function WindowTokenModule() {\n    }\n    return WindowTokenModule;\n}());\nexport { WindowTokenModule };\nWindowTokenModule.decorators = [\n    { type: NgModule, args: [{\n                providers: [{\n                        provide: WINDOW,\n                        useFactory: _window\n                    }]\n            },] },\n];\n/**\n * @nocollapse\n */\nWindowTokenModule.ctorParameters = function () { return []; };\nfunction WindowTokenModule_tsickle_Closure_declarations() {\n    /** @type {?} */\n    WindowTokenModule.decorators;\n    /**\n     * @nocollapse\n     * @type {?}\n     */\n    WindowTokenModule.ctorParameters;\n}\n//# sourceMappingURL=ngx-window-token.js.map\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/ngx-window-token/dist/src/ngx-window-token.js\n// module id = 904\n// module chunks = 0 1","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { WalletServiceProvider } from '../../providers/wallet-service/wallet-service';\nimport { ClipboardService } from 'ngx-clipboard'\nimport { EthereumProvider } from '../../providers/ethereum/ethereum';\nimport { ShareServiceProvider } from '../../providers/share-service/share-service';\n\n/**\n * Generated class for the WalletPrivatekeyPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-wallet-privatekey',\n  templateUrl: 'wallet-privatekey.html',\n})\nexport class WalletPrivatekeyPage {\n\n  password: string;\n  account: any;\n\n  constructor(\n    public navCtrl: NavController, \n    public navParams: NavParams,\n    private _clipboardService: ClipboardService,\n    public walletServiceProvider: WalletServiceProvider,\n    public ethereumProvider: EthereumProvider,\n    public shareServiceProvider: ShareServiceProvider,\n    ) {\n      this.account = this.navParams.data;\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad WalletPrivatekeyPage');\n  }\n\n  export() {\n\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/wallet-privatekey/wallet-privatekey.ts"],"sourceRoot":""}