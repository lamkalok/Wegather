{"version":3,"sources":["../../src/pages/message-detail/message-detail.module.ts","../../src/pages/message-detail/message-detail.ts"],"names":[],"mappings":"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","file":"4.js","sourcesContent":["import { NgModule } from '@angular/core';\nimport { IonicPageModule } from 'ionic-angular';\nimport { MessageDetailPage } from './message-detail';\n\n@NgModule({\n  declarations: [\n    MessageDetailPage,\n  ],\n  imports: [\n    IonicPageModule.forChild(MessageDetailPage),\n  ],\n})\nexport class MessageDetailPageModule {}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/message-detail/message-detail.module.ts","import { Component } from '@angular/core';\nimport { IonicPage, NavController, NavParams } from 'ionic-angular';\nimport { AuthServiceProvider } from '../../providers/auth-service/auth-service';\nimport { UserServiceProvider } from '../../providers/user-service/user-service';\nimport { ChatServiceProvider } from '../../providers/chat-service/chat-service';\nimport { Observable } from 'rxjs';\n\n/**\n * Generated class for the MessageDetailPage page.\n *\n * See https://ionicframework.com/docs/components/#navigation for more info on\n * Ionic pages and navigation.\n */\n\n@IonicPage()\n@Component({\n  selector: 'page-message-detail',\n  templateUrl: 'message-detail.html',\n})\nexport class MessageDetailPage {\n\n  target: any;\n  isChated: boolean;\n  msg_content: string;\n  chat_id: string;\n  uid: string;\n  messages = [];\n  chat_messages: Observable<any>;\n\n  constructor(\n    public navCtrl: NavController,\n    public navParams: NavParams,\n    public authServiceProvider: AuthServiceProvider,\n    public userServiceProvider: UserServiceProvider,\n    public chatServiceProvider: ChatServiceProvider,\n  ) {\n    this.target = this.navParams.data;\n    this.uid = this.authServiceProvider.getLoggedUID();\n    // console.log(this.target);\n    // console.log(this.authServiceProvider.userData);\n\n    try {\n      this.chatServiceProvider.checkChatBeforeRealTime(this.target.uid, this.authServiceProvider.getLoggedUID()).then(user_event => {\n        user_event.subscribe(user_data => {\n          console.log(user_data.payload.data());\n          var payload_data: any = user_data.payload.data();\n          var chats = payload_data.chats;\n          var result = null;\n          chats.forEach(element => {\n            console.log(element);\n            if (element.target_id == this.target.uid) {\n              result = element.id;\n            }\n          });\n          if (result == null) {\n            this.isChated = false;\n          } else {\n            this.isChated = true;\n            this.chat_id = result;\n            this.chatServiceProvider.getChatMessages(this.chat_id).then((cm) => {\n              // console.log(cm);\n              this.chat_messages = cm;\n              this.chat_messages.subscribe(data => {\n                //this.messages = [];\n                // console.log(data);\n                data.messages.forEach(element => {\n                  this.chatServiceProvider.getMessages(element).then(m => {\n                    // console.log(m);\n                    m.date = m.timestamp.toDate().toDateString();\n                    var updated = false;\n                    for (var i = 0; i < this.messages.length; i++) {\n                      if (this.messages[i].id == m.id) {\n                        this.messages.splice(i, 1, m);\n                        updated = true;\n                        break;\n                      }\n                    }\n                    if (!updated)\n                      this.messages.push(m);\n                    console.log(this.messages);\n                  })\n                })\n              })\n            })\n\n          }\n\n        }) // end user subscribe\n      });\n\n      // this.chatServiceProvider.checkChatBefore(this.target.uid, this.authServiceProvider.getLoggedUID()).then(result => {\n      //   // console.log(result);\n\n      // });\n    } catch (error) {\n\n    }\n\n  }\n\n  ionViewDidLoad() {\n    console.log('ionViewDidLoad MessageDetailPage');\n\n  }\n\n  sendMsg() {\n    var user = this.authServiceProvider.userData;\n    // console.log(this.isChated);\n    if (this.isChated == false) {\n\n      // console.log(this.msg_content);\n      this.chatServiceProvider.createChat(this.target, user).then((chat_id) => {\n        console.log(chat_id);\n\n        this.chatServiceProvider.setUserChats(chat_id, this.target.uid, this.authServiceProvider.getLoggedUID()).then(() => {\n          console.log(\"After setUserChats\");\n          this.chatServiceProvider.createMessage(this.target, user, chat_id, this.msg_content).then(()=>{\n            this.msg_content = \"\";\n          });\n        });\n\n      });\n    } else {\n      this.chatServiceProvider.createMessage(this.target, user, this.chat_id, this.msg_content);\n    }\n    this.msg_content = \"\";\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/message-detail/message-detail.ts"],"sourceRoot":""}